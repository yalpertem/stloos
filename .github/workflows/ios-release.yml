name: iOS Release to App Store

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.1)"
        required: true
        default: "1.0.1"

jobs:
  build-and-release:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.0"
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Run Flutter analyze
        run: flutter analyze

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build iOS release
        run: |
          flutter build ios --release --no-codesign

      - name: Cleanup existing keychain
        run: |
          security delete-keychain signing_temp.keychain || true
          
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_DISTRIBUTION_CERT_BASE64 }}
          p12-password: ${{ secrets.IOS_DISTRIBUTION_CERT_PASSWORD }}
          keychain-password: ""
          create-keychain: true

      - name: Import Provisioning Profile
        uses: Apple-Actions/download-provisioning-profiles@v2
        with:
          bundle-id: "com.yalpertem.stloos"
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
          
      - name: List provisioning profiles
        run: |
          echo "Provisioning profiles in ~/Library/MobileDevice/Provisioning Profiles/:"
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
          echo ""
          echo "Searching for App Store profile:"
          for profile in ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision; do
            echo "Profile: $profile"
            security cms -D -i "$profile" 2>/dev/null | grep -E "TeamName|Name|UUID|application-identifier" || true
            echo "---"
          done
          
      - name: Extract provisioning profile UUID
        id: get_profile
        run: |
          # Find the App Store provisioning profile UUID
          for profile in ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision; do
            if security cms -D -i "$profile" 2>/dev/null | grep -q "stloos is an app documenting the streets ios_app_store"; then
              UUID=$(security cms -D -i "$profile" 2>/dev/null | grep -A1 "UUID" | grep -o "[A-Z0-9]\{8\}-[A-Z0-9]\{4\}-[A-Z0-9]\{4\}-[A-Z0-9]\{4\}-[A-Z0-9]\{12\}")
              echo "Found App Store profile UUID: $UUID"
              echo "profile_uuid=$UUID" >> $GITHUB_OUTPUT
              break
            fi
          done

      - name: Archive iOS App
        run: |
          cd ios
          security list-keychains -d user -s signing_temp.keychain login.keychain
          security unlock-keychain -p "" signing_temp.keychain
          xcodebuild -workspace Runner.xcworkspace \
                     -scheme Runner \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath build/Runner.xcarchive \
                     -allowProvisioningUpdates \
                     DEVELOPMENT_TEAM=H9XZUWW22W \
                     CODE_SIGN_STYLE=Automatic \
                     OTHER_CODE_SIGN_FLAGS="--keychain signing_temp.keychain" \
                     archive

      - name: Configure keychain for export
        run: |
          security list-keychains -s signing_temp.keychain login.keychain
          security default-keychain -s signing_temp.keychain
          security unlock-keychain -p "" signing_temp.keychain
          security set-keychain-settings -t 3600 -u signing_temp.keychain
          
      - name: Create dynamic ExportOptions.plist
        run: |
          cd ios
          cat > DynamicExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store-connect</string>
              <key>teamID</key>
              <string>H9XZUWW22W</string>
              <key>uploadBitcode</key>
              <false/>
              <key>compileBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF
          
      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive \
                     -archivePath build/Runner.xcarchive \
                     -exportPath build \
                     -exportOptionsPlist DynamicExportOptions.plist \
                     -allowProvisioningUpdates \
                     DEVELOPMENT_TEAM=H9XZUWW22W

      - name: Upload to App Store Connect
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: "ios/build/Runner.ipa"
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ios/build/Runner.ipa
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
